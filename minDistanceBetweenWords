
#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int minDistBrut(const string line, string word1, string word2)
{
    vector<string> lineWords;
    string token;
    stringstream tokenstream(line);
    while(getline(tokenstream, token, ' '))
        lineWords.push_back(token);
    int minDist = INT_MAX;
    
    if(word1 == word2)
        return 0;
    for(int index = 0; index < lineWords.size(); index++)
    {
        if(lineWords[index] == word1)
        {
            for(int cur = 0; cur < lineWords.size(); cur++)
            {
                if(lineWords[cur] == word2)
                {
                    int curDist = abs(cur - index - 1);
                    if(curDist < minDist)
                        minDist = curDist;
                }
            }
        }
    }
    return minDist;
}
int minDistance(const string line, string word1, string word2)
{
    vector <string> lineWords;
    string token;
    stringstream tokenstream(line);
    while(getline(tokenstream, token ,' '))
        lineWords.push_back(token);
    int prev = -1;
    int ans = INT_MAX;
    
    if(word1 == word2)
        return 0;
    cout << "start Algo :" << "line size =  "<< lineWords.size() << endl;
    for(int cur = 0; cur != lineWords.size(); cur++)
    {
        
        if((lineWords[cur] == word1) || (lineWords[cur] == word2))
        {
            if(prev == -1)
                prev = cur;
                
            if(lineWords[cur] == lineWords[prev])
                prev = cur;
            else
            {
                ans = min(ans, cur - prev -1);
                prev = cur;
            }
        }
        
    }
    return ans;
}

int main() {
    string line = "Crack ok not ok not interview ok not Crack ok not not Crack not ok not Interview";
    string word1 = "Crack";
    string word2 = "Interview";
    cout << " min dist : " << minDistance(line, word1, word2) << endl;
    cout << " Algo 2 min dist : " << minDistBrut(line, word1, word2);
    
	return 0;
}
