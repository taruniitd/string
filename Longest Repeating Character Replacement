//https://www.geeksforgeeks.org/maximum-length-substring-having-all-same-characters-after-k-changes/
#include <iostream>
using namespace std;

int findlen(string& A, int n, int k, char ch)
{
    int maxlen = 1;
    int cnt = 0;
    int l = 0, r = 0;
    
    while(r < n)
    {
        if(A[r] != ch)
            ++cnt;
        while(cnt > k)
        {
            if(A[l] != ch)
                cnt--;
            ++l;
        }
        maxlen = max(maxlen, r - l + 1);
        ++r;
    }
    return maxlen;
}


int answer(string A, int n, int k)
{
    int maxlen = 1;
    for(int i = 0; i < 26; i++)
    {
        maxlen = max(maxlen, findlen(A, n, k, i+'A'));
        maxlen = max(maxlen, findlen(A, n, k, i+'a'));
    }
    return maxlen;
}

int main()
{
    int n = 7, k = 2;
    string A = "CABACBA";
    cout << "maximum len = " << answer(A, n, k) << endl;
}
